version: "3"

services:
  backend:
    build: ./
    container_name: assignment_container
    working_dir: /assignment/src
    restart: always
    command: >
      sh -c "
        sleep 10 &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py loaddata fixtures/users.json &&
        python manage.py loaddata fixtures/subscriptions.json &&
        python manage.py loaddata fixtures/usersubscription.json &&
        python manage.py loaddata fixtures/images.json &&
        python manage.py runserver 0:8000"
    ports:
        - ${LOCAL_PORT}:${WSGI_PORT}
    volumes:
        - ./src:/assignment/src
        - static_content:/assignment/src/static
        - media_content:/assignment/src/media
    env_file:
        - .env
    depends_on:
      - db
      - elasticsearch

  db:
    container_name: database_container
    image: postgres:15-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    env_file:
      - .env

  nginx:
    container_name: nginx_container
    image: nginx:1.19
    volumes:
      - static_content:/assignment/src/static
      - media_content:/assignment/src/media
      - ./nginx:/etc/nginx/conf.d
    ports:
        - 80:80
        - 443:443
    env_file:
      - .env
    depends_on:
      - backend

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
        - 9200:9200
    environment:
        - discovery.type=single-node
        - xpack.security.enabled=false

  redis:
    image: redis
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - db

  celery:
    build: ./
    command: celery -A config.celery_app.app worker -l info
    restart: always
    volumes:
      - ./src:/assignment/src
    env_file:
      - .env
    working_dir: /assignment/src
    depends_on:
      - redis
      - db

  celerybeat:
    build: ./
    command: celery -A config.celery_app.app worker -l info -S django
    restart: always
    volumes:
      - ./src:/assignment/src
    env_file:
      - .env
    working_dir: /assignment/src
    depends_on:
      - redis
      - db

  flower:
    build: ./
    command: celery -A config.celery_app.app flower
    restart: always
    volumes:
      - ./src:/assignment/src
    env_file:
      - .env
    working_dir: /assignment/src
    ports:
      - 5556:5555
    depends_on:
      - redis
      - celery

  redisadmin:
    image: redislabs/redisinsight
    container_name: redisadmin
    restart: on-failure
    ports:
      - 8001:8001
    env_file: .env

volumes:
  static_content: {}
  media_content: {}
  esdata1:
  pg_data: